//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer.Repository
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RecruitEntities : DbContext
    {
        public RecruitEntities()
            : base("name=RecruitEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_mst_BankName> tbl_mst_BankName { get; set; }
        public virtual DbSet<tbl_mst_Section> tbl_mst_Section { get; set; }
        public virtual DbSet<myview> myview { get; set; }
        public virtual DbSet<SalaryDetail> SalaryDetails { get; set; }
        public virtual DbSet<OutSourcingDesignation> OutSourcingDesignations { get; set; }
        public virtual DbSet<AppointmentDetail> AppointmentDetails { get; set; }
        public virtual DbSet<AppointmentProject> AppointmentProjects { get; set; }
        public virtual DbSet<OrderRequestDetail> OrderRequestDetails { get; set; }
        public virtual DbSet<OutsourcingEmployeeDetail> OutsourcingEmployeeDetails { get; set; }
        public virtual DbSet<OutsourcingMeeting> OutsourcingMeetings { get; set; }
        public virtual DbSet<OutsourcingOffer> OutsourcingOffers { get; set; }
        public virtual DbSet<AppointmentMaster> AppointmentMasters { get; set; }
        public virtual DbSet<ListItemMaster> ListItemMasters { get; set; }
        public virtual DbSet<PayStructure> PayStructures { get; set; }
        public virtual DbSet<ProfessionalTax> ProfessionalTaxes { get; set; }
    
        public virtual ObjectResult<ConsultancyProjectDetail_Result> ConsultancyProjectDetail(string dept, string pType, string projectNo)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("Dept", dept) :
                new ObjectParameter("Dept", typeof(string));
    
            var pTypeParameter = pType != null ?
                new ObjectParameter("pType", pType) :
                new ObjectParameter("pType", typeof(string));
    
            var projectNoParameter = projectNo != null ?
                new ObjectParameter("ProjectNo", projectNo) :
                new ObjectParameter("ProjectNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultancyProjectDetail_Result>("ConsultancyProjectDetail", deptParameter, pTypeParameter, projectNoParameter);
        }
    
        public virtual ObjectResult<Coordinator_Result> Coordinator(string coorCode)
        {
            var coorCodeParameter = coorCode != null ?
                new ObjectParameter("CoorCode", coorCode) :
                new ObjectParameter("CoorCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Coordinator_Result>("Coordinator", coorCodeParameter);
        }
    
        public virtual ObjectResult<Department_Result> Department()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Department_Result>("Department");
        }
    
        public virtual ObjectResult<sponsoredProjectDetail_Result> sponsoredProjectDetail(string dept, string projectNo)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            var projectNoParameter = projectNo != null ?
                new ObjectParameter("ProjectNo", projectNo) :
                new ObjectParameter("ProjectNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sponsoredProjectDetail_Result>("sponsoredProjectDetail", deptParameter, projectNoParameter);
        }
    }
}
