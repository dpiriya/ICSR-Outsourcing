@model Outsourcing.ViewModel.MonthWiseReportView

@{
    ViewBag.Title = "MonthWiseReport";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/ReportSelectionStyle.css" rel="stylesheet" type="text/css" />
@using (Html.BeginForm("MonthWiseReport", "OutSourceReport"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <table align="center">
            <tr> <td><h3>Period Wise Report</h3></td></tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FromDate)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.FromDate)
                        @Html.ValidationMessageFor(model => model.FromDate)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ToDate)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.ToDate)
                        @Html.ValidationMessageFor(model => model.ToDate)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.OrderType)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.OrderType, Model.OrderTypes, " -- Select Order --")
                        @Html.ValidationMessageFor(model => model.OrderType)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ReportBasedOn)
                    </div>
                </td>
                <td>
                    <div class="editor-field">

                        @foreach (var rb in Model.ReportBased)
                        {
                            if (rb.Value == "EntryDate")
                            {
                                 @Html.RadioButtonFor(model => model.ReportBasedOn, rb.Value, new { @checked = "checked" }) @Html.Raw("&nbsp;&nbsp;") @rb.Text @Html.Raw("&nbsp;&nbsp;&nbsp;&nbsp;")
                            }
                            else
                            {
                                @Html.RadioButtonFor(model => model.ReportBasedOn, rb.Value) @Html.Raw("&nbsp;&nbsp;") @rb.Text
                            }
                        }
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DocumentFormat)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.DocumentFormat, Model.DocumentFormats)
                        @Html.ValidationMessageFor(model => model.DocumentFormat)
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="2" align="center">
                    <p>
                        <input class="SubmitViolet" type="submit" value="Report" onclick="target = '_blank';" />
                        <input class="SubmitViolet" type="reset" value="Clear" />
                    </p>
                </td>
            </tr>
        </table>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(document).ready(function () {
        //$("#FromDate").attr('readOnly', 'true');
        $("#FromDate").datepicker({
            dateFormat: "dd/mm/yy",
            onSelect: function (date) {
                var dt = $("#FromDate").datepicker('getDate');
                dt.setDate(dt.getDate() + 1);
                //var dt = $("#FromDate").datepicker('getDate');
                //dt.setDate(dt.getDate() + 1);
                $("#ToDate").val('');
                $("#ToDate").datepicker('option', 'minDate', dt);
            }
        });
        $("#FromDate").attr("placeholder", "dd/MM/yyyy");
        //$("#ToDate").attr('readOnly', 'true');
        $("#ToDate").attr("placeholder", "dd/MM/yyyy").datepicker({ dateFormat: "dd/mm/yy", changeMonth: "true" });
        $("#ToDate").keyup(function (e) { if (e.keyCode == 8 || e.keyCode == 46) { $.datepicker._clearDate(this); } });
    });
</script>
}
