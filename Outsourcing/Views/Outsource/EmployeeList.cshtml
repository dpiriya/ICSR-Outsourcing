@using PagedList;
@using PagedList.Mvc;
@using System.Web
@model IPagedList<Outsourcing.ViewModel.OutsourcingEmployeeDetailsView>
<link href="~/Content/TableView.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Candidate List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="titleView"><h3>Candidate List</h3></div>
@using (@Html.BeginForm("EmployeeList", "Outsource", FormMethod.Get))
{
    <table class="SearchTable">        
        <tr>
            <td>Search Name</td><td>@Html.TextBox("SearchName")</td> <td>Search DOB</td><td> @Html.TextBox("SearchDOB") @Html.Hidden("dob")</td><td><input type="submit" id="btnSearch" name="btnSearch" class="SubmitBlue" value="Search" /></td><td colspan="3" align="right" width="40%"> @Html.ActionLink("Create New", "NewEmployee", null, new { @class = "SubmitBlue" })</td>
        </tr>
    </table>
}
<table class="Table1">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().CandidateID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().CandidateName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().DOB)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().FatherName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().PermanentAddress)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().MobileNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().EmailID)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        using (@Html.BeginForm("", "Outsource", new { id = item.CandidateID }))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CandidateID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CandidateName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DOB)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FatherName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PermanentAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MobileNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailID)
                </td>
                <td class="actionColumn">
                    <input type="submit" class="SubmitBlue" value="Edit" name="action:NewEmployee" onclick="target = '_self';" />
                    <input type="submit" class="SubmitBlue" value="Details" name="action:CandidateDetails" onclick="target = '_self';" />
                    <input type="submit" class="SubmitBlue" value="Minutes" name="action:NewMinutesFromEmpList" onclick="target = '_self';" />
                </td>
            </tr>
        }
    }
</table>
<table class="SearchTable">
    <tr>
        <td colspan="8">
            @Html.PagedListPager(Model, Page => Url.Action("EmployeeList", new { SearchName = Request.QueryString["SearchName"], SearchDOB = Request.QueryString["SearchDOB"], Page }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayItemSliceAndTotal = true, DisplayPageCountAndCurrentLocation = true })
        </td>
    </tr>
</table>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#SearchDOB").attr('readOnly', 'true');
            $("#SearchDOB").attr("placeholder", "dd/MM/yyyy").datepicker({ dateFormat: "dd/mm/yy", changeYear: true, changeMonth: true, });
            $("#SearchDOB").keyup(function (e) { if (e.keyCode == 8 || e.keyCode == 46) { $.datepicker._clearDate(this); } });
            $("#btnSearch").click(function () {
                var dob = $("#SearchDOB").val();
                $("#dob").val(dob.replace("/", ""));
                $("#dob").val($("#dob").val().replace("/", ""));                
            });
        });
    </script>
}
@{
    if (ViewData["Status"] != "" && ViewData["Status"] != null)
    {
        var ActionType = ViewData["Status"].ToString();
        ViewData["Status"] = null;
        var results = ViewData["CandidateID"];
        if (ActionType == "Update")
        {
            <script type="text/javascript" language="javascript">
                alert(" The Candidate ID @results is updated successfully");
            </script>
        }
        else if (ActionType == "Delete")
        {
            <script type="text/javascript" language="javascript">
                alert(" The Candidate ID @results is deleted successfully");
            </script>
        }
    }
}